70. Climbing Stairs

You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
 

Constraints:

1 <= n <= 45
Accepted
2.3M
Submissions
4.4M
Acceptance Rate
52.2%




SOLUTION IN JAVA:

class Solution {
    public int climbStairs(int n) {
        int a=1,b=2,count=0;
        if(n<=2)
        return n;
        for(int i=2;i<n;i++){
            count=a+b;
            a=b;b=count;
        }
        return count;
    }
}
