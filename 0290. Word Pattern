290. Word Pattern


Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.



SOLUTION IN JAVA:



class Solution {
    public boolean wordPattern(String pattern, String s) {
        Map<Character,String>map1=new HashMap<>();
        Map<String,Character>map2=new HashMap<>();
        String str[]=s.split(" ");
        if(pattern.length()!=str.length){
            return false;
        }
        int n=str.length;
        for(int i=0;i<n;i++){
            char ch=pattern.charAt(i);
            if(map1.containsKey(ch) && !map1.get(ch).equals(str[i]) ||
               map2.containsKey(str[i]) && !map2.get(str[i]).equals(ch)){
                   return false;
               }
            map1.put(ch,str[i]);
            map2.put(str[i],ch);
        }
        return true;
    }
}
