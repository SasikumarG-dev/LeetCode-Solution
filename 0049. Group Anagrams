49. Group Anagrams



Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.



SOLUTION IN JAVA:



class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String,List<String>>map=new HashMap<>();

        for(String s:strs){
            String str=sort(s);
            // char ch[]=s.toCharArray();
            // Arrays.sort(ch);
            // String str=new String(ch);
            if(!map.containsKey(str)){
                map.put(str,new ArrayList<>());
            }
            map.get(str).add(s);
        }
        return new ArrayList<>(map.values());
    }
    public String sort(String str){
        StringBuilder sb=new StringBuilder();
        int arr[]=new int[26];
        for(char ch:str.toCharArray()){
            arr[ch-'a']++;
        }
        for(int i=0;i<arr.length;i++){
                sb.append(arr[i]);
                sb.append("#");
        }
        return sb.toString();
    }
}
